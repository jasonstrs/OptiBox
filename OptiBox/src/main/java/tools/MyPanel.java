/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tools;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.util.List;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Random;
import modele.Objet_d_Instance;

/**
 *
 * @author Jason
 */
public class MyPanel extends javax.swing.JPanel {
    
    private Collection<modele.Objet_d_Instance> instancesADessiner;
    
    /**
     * Creates new form MyPanel
     */
    public MyPanel() {
        initComponents();
        this.instancesADessiner = new ArrayList<>();
    }
    
    public void clearPaint(Graphics g){
      super.paintComponent(g); // first draw a clear/empty panel

    }
    
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g); // first draw a clear/empty panel
        if (this.getInstancesADessiner().isEmpty()) {// on dessine l'élément par défaut 
            g.setColor(Color.black);
            Font f = new Font("Montserrat Medium", Font.BOLD, 24);
            g.setFont(f);
            g.drawString("Veuillez selectionner une instance", this.getWidth()/6, this.getHeight()/3);              
        } else { // on dessine les formes !
            int x=0;
            int y=0;
            int cpt=0;
            for (Objet_d_Instance oI : this.instancesADessiner){
                g.setColor(this.getRandomColor());
                g.fillRect(x, y, oI.getLargeur(), oI.getHauteur());
                g.drawRect(x, y, oI.getLargeur(), oI.getHauteur());
                cpt++;
                x=oI.getLargeur()+20;
                if (cpt ==2){
                    x=0;
                    y=100;
                }
                
            }
            System.out.println("ok");
        }
       
    }

    public Collection getInstancesADessiner() {
        return instancesADessiner;
    }

    public void setInstancesADessiner(Collection instancesADessiner) {
        this.instancesADessiner = instancesADessiner;
    }
    
    public Color getRandomColor(){
        // source : https://stackoverflow.com/questions/4246351/creating-random-colour-in-java#:~:text=Random%20rand%20%3D%20new%20Random()%3B,float%20r%20%3D%20rand.
        Random rand = new Random();
        float r = rand.nextFloat();
        float g = rand.nextFloat();
        float b = rand.nextFloat();
        return new Color(r, g, b);
    }
    
    
    

   // @Override
    //public void paint(Graphics g) {
       /* System.out.println("OKOKOK");
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
        g.setColor(Color.black);
        Font f = new Font("Montserrat Medium", Font.BOLD, 24);
        g.setFont(f);
        g.drawString("Veuillez selectionner une instance", this.getWidth()/6, this.getHeight()/3);*/
    //}    
    
    
    /*public void paintSecret(Graphics g){
        g.setColor(Color.blue);
        g.fillRect(50, 50, 150, 150);
    }*/
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
