/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tools;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Collection;
import modele.*;

/**
 *
 * @author Jason
 */
public class ResolvePanel extends javax.swing.JPanel {

    private Solution s;
    private int scale=5;
    /**
     * Creates new form ResolvePanel
     */
    public ResolvePanel() {
        initComponents();
    }
    

    
    /************************* DESSINER ********************************/
    @Override    
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
        if (this.s != null){ // si il y a une solution, on l'a dessine
            Box box;
            int x=0,y=0,maxHeight=0;
            final int largeurPanel = this.getWidth();
            System.out.println("SIZE : "+this.s.getMesSolutionBox().size());
            for (SolutionBox sb : this.s.getMesSolutionBox()){
                box=sb.getTYPEDEBOX();
                g.setColor(Color.yellow);
                if (x+box.getLargeur()/scale > largeurPanel){
                    // si elle dépasse, on récupère la hauteur max des pièces précédentes, puis on ajoute 20
                    y+=maxHeight+20;
                    x=0; // on remet x à 0
                    maxHeight=0;
                }
                g.fillRect(x, y, box.getLargeur()/scale, box.getHauteur()/scale);
                x+=box.getLargeur()/scale+20;
                if (box.getHauteur()/scale>maxHeight)
                        maxHeight=box.getHauteur()/scale;
            }
            // on ajuste la hauteur du panel
            Dimension dimPanel = new Dimension(this.getWidth()-20,y);
            this.setPreferredSize(dimPanel);
            this.revalidate();
        }
    }

    /************************* GETTERS ET SETTERS***********************/
    public void setSolution(Solution s) {
        this.s = s;
    }
    
    public Solution getSolution(){
        return s;
    }

    /****************************** METHODES ****************************/
    /**
     * Fonction qui permet d'augmenter le zoom sur le panel
     * Si l'echelle a atteint 2, on ne peux pas plus zoomer
     */
    public void zoomPlus() {
        if (this.scale <= 2)return;
        this.scale--;
    }
    
    /**
     * Fonction qui permet de diminuer le zoom sur le panel
     * Si l'echelle a atteint 9, on quitte
     */
    public void zoomMoins(){
        if (this.scale >=9)return;
        this.scale++;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
