/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.BorderLayout;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.util.Collection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.BevelBorder;
import metier.DBRequests;
import modele.Instance;
import modele.Objet_d_Instance;
import test.TestEnti;

/**
 *
 * @author Jason
 */
public class Accueil extends javax.swing.JFrame {
    private Graphics g;
    private DBRequests dbr;
    
    /**
     * Creates new form Accueil
     */
    public Accueil() {
        initComponents();
        initialisationFenetre();   
        this.setG(this.myPanel1.getGraphics());
        
        //this.myPanel1.defaultPaint(g);
        getAllInstance();
    }
    
    /**
     * Fonction qui permet de d'initialiser le modèle de la fenètre
     */
    private void initialisationFenetre(){
        this.setVisible(true);
        this.setTitle("OptiBox Accueil");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        this.setSize(dim.width-100, dim.height-100);
        
        this.myPanel1.setSize(dim.width-200-this.jList_instance.getWidth(), dim.height-10);
        this.myPanel1.setLocation(this.jList_instance.getWidth()+20, 10);

        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        /*System.out.println("taille ecran : "+dim.getWidth());
        System.out.println("Taille panel : "+this.myPanel1.getWidth());
        System.out.println("taille list : "+this.jList_instance.getWidth());*/
    }
        
    private void getAllInstance(){
        DefaultListModel dlm = new DefaultListModel();
        this.jList_instance.setModel(dlm);

        try {
            //        dlm.addElement(i);
            dbr = DBRequests.getInstance();
            dbr.getAllInstances();
            List<Instance> instances= dbr.getToutesLesInstances();
            for (Instance i : instances){
                dlm.addElement(i);
            }
        } catch (Exception ex) {
            Logger.getLogger(Accueil.class.getName()).log(Level.SEVERE, null, ex);
        }
        

        System.out.println(dbr.ToutesLesInstances);
              
    }
    
    public void afficherInstance(Instance i){
        Collection<Objet_d_Instance> ObjectsDeLInstance = i.getObjetsDeLInstance();
        this.myPanel1.setInstancesADessiner(ObjectsDeLInstance);
        this.myPanel1.repaint();
    }

    public Graphics getG() {
        return g;
    }

    public void setG(Graphics g) {
        this.g = g;
    }
    
    
    /*
        List<Client> listeDesClients = new ArrayList<>();
        DefaultListModel dlm = new DefaultListModel();
        this.Liste_des_clients.setModel(dlm);
        try {
            listeDesClients=this.RA.ensClients(nomprenom);
            for (Client c : listeDesClients){
                dlm.addElement(c);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Impossible de lister les différents clients, il y a un problème avec la BDD.", "Erreur", HEIGHT);
            this.dispose();
            Logger.getLogger(GestionClients.class.getName()).log(Level.SEVERE, null, ex);
        }
    */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_instance = new javax.swing.JList<>();
        myPanel1 = new tools.MyPanel();
        menuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.red);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        getContentPane().setLayout(null);

        jScrollPane1.setBackground(java.awt.Color.red);

        jList_instance.setBackground(java.awt.Color.lightGray);
        jList_instance.setFont(new java.awt.Font("Montserrat Medium", 0, 24)); // NOI18N
        jList_instance.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList_instance.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList_instance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList_instanceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList_instance);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 280, 580);

        javax.swing.GroupLayout myPanel1Layout = new javax.swing.GroupLayout(myPanel1);
        myPanel1.setLayout(myPanel1Layout);
        myPanel1Layout.setHorizontalGroup(
            myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        myPanel1Layout.setVerticalGroup(
            myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        getContentPane().add(myPanel1);
        myPanel1.setBounds(300, 20, 730, 570);

        menuBar.setBackground(java.awt.Color.red);

        jMenu1.setText("File");
        menuBar.add(jMenu1);

        jMenu2.setText("Edit");
        menuBar.add(jMenu2);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
        System.out.println("width changed");
        //this.setLayout(null);
        //this.jLabel_default.setLocation(200, 200);
    }//GEN-LAST:event_formWindowStateChanged

    private void jList_instanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList_instanceMouseClicked
        // TODO add your handling code here:
        int index = this.jList_instance.getSelectedIndex(); // on récupère l'index qui a été choisi dans la liste
        Object c = this.jList_instance.getModel().getElementAt(index); // on récupère l'objet
        afficherInstance((Instance)c); // on caste l'objet et on l'affiche
    }//GEN-LAST:event_jList_instanceMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Accueil();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JList<String> jList_instance;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menuBar;
    private tools.MyPanel myPanel1;
    // End of variables declaration//GEN-END:variables
}
